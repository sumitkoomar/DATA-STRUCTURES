class Node:
    def __init__(self,data, next):
        self.data = data
        self.next = next

class Linkedlist:
    def __init__(self):
        self.head=None

    def prinT(self):
        if self.head == None:
            print("Linked is empty")
            return
        else:
            itr = self.head
            ll = ''
            while itr:
                ll += str(itr.data) + '-->'
                itr = itr.next
        print(ll)

    def insert_at_beggining(self,data):
        node=Node(data,self.head)
        self.head=node

    def insert_at_index(self,data,index):
        itr = self.head
        ptr = self.head.next
        i=1
        while i!=index:
            itr=itr.next
            ptr=ptr.next
            i+=1
        itr.next=Node(data,ptr)

    def insert_at_end(self,data):
        if self.head:
            ptr=self.head
            while ptr.next:
                ptr=ptr.next
            ptr.next=Node(data,None)
            return
        else:
            self.head=Node(data,None)
            return

    def delete_at_beggining(self):
        self.head=self.head.next

    def delete_at_end(self):
        itr = self.head
        ptr = self.head.next
        while ptr.next!=None:
            itr=itr.next
            ptr=ptr.next
        itr.next=None
        
if __name__ == '__main__' :
    k=Linkedlist()
    k.insert_at_beggining(50)
    k.insert_at_beggining(10)
    k.insert_at_end(100)
    k.insert_at_index(40,2)
    k.insert_at_index(20,2)
    k.insert_at_index(30,2)
    k.insert_at_index(70,2)
    k.delete_at_end()
    k.prinT()
